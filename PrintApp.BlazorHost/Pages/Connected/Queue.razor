@page "/Queue"
@using PrintApp.Logic
@using WebApp.Core
@inject PrintersManager PrintersManager

<h1>Queue Page</h1>

<h5>Configure printing queue, add and remove files.</h5>

<div class="drag-drop-zone">
    <InputFile OnChange="ViewFile" />
    @status
</div>

<h6>Currently in queue: @string.Join(", ", PrintersManager.CurrentPrinter.State.GCodes).</h6>

@code {
    const string DefaultStatus = "Drop a text file here to view it, or click to choose a file";
    const int MaxFileSize = 100 * 1024 * 1024; // 5MB
    string status = DefaultStatus;

    string fileName;
    string fileTextContents;

    async Task ViewFile(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file == null)
        {
            return;
        }
        else if (file.Size > MaxFileSize)
        {
            status = $"That's too big. Max size: {MaxFileSize} bytes.";
        }
        else
        {
            status = "Loading...";
            using (StreamReader binaryReader = new StreamReader(file.Data))
            {
                List<string> fileLines = new List<string>();
                string line;
                while ((line = await binaryReader.ReadLineAsync()) != null)
                {
                    fileLines.Add(line);
                }

                PrintersManager.CurrentQueue.UploadGCode(new GCodeFile(file.Name, fileLines));
            }

            status = DefaultStatus;
        }
    }
}